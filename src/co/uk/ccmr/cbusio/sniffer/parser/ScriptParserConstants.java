/* Generated By:JJTree&JavaCC: Do not edit this line. ScriptParserConstants.java */
package co.uk.ccmr.cbusio.sniffer.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ScriptParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EQUIVALENT = 1;
  /** RegularExpression Id. */
  int NOTEQUIVALENT = 2;
  /** RegularExpression Id. */
  int LESSTHAN = 3;
  /** RegularExpression Id. */
  int LESSTHANEQUAL = 4;
  /** RegularExpression Id. */
  int GREATERTHAN = 5;
  /** RegularExpression Id. */
  int GREATERTHANEQUAL = 6;
  /** RegularExpression Id. */
  int LBRACKET = 7;
  /** RegularExpression Id. */
  int RBRACKET = 8;
  /** RegularExpression Id. */
  int LPAREN = 9;
  /** RegularExpression Id. */
  int RPAREN = 10;
  /** RegularExpression Id. */
  int LBRACE = 11;
  /** RegularExpression Id. */
  int RBRACE = 12;
  /** RegularExpression Id. */
  int SEMICOLON = 13;
  /** RegularExpression Id. */
  int COMMA = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int MINUS = 16;
  /** RegularExpression Id. */
  int EQUALS = 17;
  /** RegularExpression Id. */
  int TX = 18;
  /** RegularExpression Id. */
  int TXRX = 19;
  /** RegularExpression Id. */
  int PAUSE = 20;
  /** RegularExpression Id. */
  int PROMPT = 21;
  /** RegularExpression Id. */
  int EXECUTE = 22;
  /** RegularExpression Id. */
  int INCLUDE = 23;
  /** RegularExpression Id. */
  int RECEIVE = 24;
  /** RegularExpression Id. */
  int TIMEOUT = 25;
  /** RegularExpression Id. */
  int MACRO = 26;
  /** RegularExpression Id. */
  int OK = 27;
  /** RegularExpression Id. */
  int YESNO = 28;
  /** RegularExpression Id. */
  int STRING = 29;
  /** RegularExpression Id. */
  int INT = 30;
  /** RegularExpression Id. */
  int IF = 31;
  /** RegularExpression Id. */
  int ELSE = 32;
  /** RegularExpression Id. */
  int OPC = 33;
  /** RegularExpression Id. */
  int CHAR = 34;
  /** RegularExpression Id. */
  int HEX1 = 35;
  /** RegularExpression Id. */
  int HEX2 = 36;
  /** RegularExpression Id. */
  int MID = 37;
  /** RegularExpression Id. */
  int THIS = 38;
  /** RegularExpression Id. */
  int IDENTIFIER = 39;
  /** RegularExpression Id. */
  int STRING_LITERAL = 40;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 41;
  /** RegularExpression Id. */
  int DIGIT = 42;
  /** RegularExpression Id. */
  int LETTER = 43;
  /** RegularExpression Id. */
  int HEXLETTER = 44;
  /** RegularExpression Id. */
  int ALPHANUM = 45;
  /** RegularExpression Id. */
  int HEXDIGIT = 46;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 47;
  /** RegularExpression Id. */
  int HEX_LITERAL = 48;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"=\"",
    "\"tx\"",
    "\"txrx\"",
    "\"pause\"",
    "\"prompt\"",
    "\"execute\"",
    "\"include\"",
    "\"receive\"",
    "\"timeout\"",
    "\"macro\"",
    "\"ok\"",
    "\"yesno\"",
    "\"string\"",
    "\"int\"",
    "\"if\"",
    "\"else\"",
    "\"opc\"",
    "\"char\"",
    "\"hex1\"",
    "\"hex2\"",
    "\"mid\"",
    "\"this\"",
    "<IDENTIFIER>",
    "<STRING_LITERAL>",
    "<INTEGER_LITERAL>",
    "<DIGIT>",
    "<LETTER>",
    "<HEXLETTER>",
    "<ALPHANUM>",
    "<HEXDIGIT>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<token of kind 54>",
    "<token of kind 55>",
    "\"||\"",
    "\"&&\"",
    "\"|\"",
    "\"^\"",
    "\"&\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"~\"",
    "\"!\"",
  };

}
